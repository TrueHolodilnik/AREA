--A.R.E.A. Thirst by Nuor
--Last edited 03.02.2019 by Surs
local coeff	= 1
local _tmr
local weight_coeff = 0.005
local blur = 0.2
local force = 0.05
local itn_mul = 1
local die_chance = 10
local force_slp = 5

function on_game_start()
	local function actor_on_first_update()
		RegisterScriptCallback("actor_on_update",actor_on_update)
		RegisterScriptCallback("actor_on_item_use",actor_on_item_use)
	end
	RegisterScriptCallback("actor_on_first_update",actor_on_first_update)
end

function actor_on_item_use(item,sec)
	test_blur()
end

function actor_on_update(b,d)
	local tg = time_global()
	if _tmr == nil or _tmr < tg then
		_tmr = tg + 300000	--5 minutes
		test_blur()
	end
end

function test_blur()
	level.remove_pp_effector(39568)
	coeff = area_skills and area_skills.skills_table and area_skills.skills_table.survival_skill/50 or coeff
	local OW = area_health_system and area_health_system.OverWeight or 0
	local check = db.actor:cast_Actor():conditions():GetThirst() + (coeff-1)/10 - OW * weight_coeff
	if check < blur then
		if check < force and math.random(100) <= force_slp and not db.actor:has_info("actor_is_sleeping")==true then
			db.actor:give_info_portion("force_slp")
			force_sleep()
		else
			level.set_pp_effector_factor(39568, (1-check) * itn_mul)
		end
	end
	--SetHudMsg (string.format("thirst [%4.4f]",check),5)
end

function force_sleep()
	ui_sleep_dialog.sleep_forced()
	if math.random(100) < 5 then
		SetHudMsg(game.translate_string("st_sleep_deprived"),5)
		db.actor:kill(db.actor)
		return
	end
	SetHudMsg(game.translate_string("st_sleep_fatal"),8)
	--A.R.E.A. Skills lucky
	if area_skills then area_skills.raise_skill("survival_skill",1) end
	disable_info("force_slp")
end