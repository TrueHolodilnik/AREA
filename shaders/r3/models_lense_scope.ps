#include "common.h"
#include "pnv.h"
#include "infrared.h"
#include "lmodel.h"
#include "hmodel.h"
struct 	v2p
{
 	float2 	tc0: 		TEXCOORD0;	// base
 	float3 	tc1: 		TEXCOORD1;	// environment
  	float4	c0:			COLOR0;		// sun.(fog*fog)
};

//////////////////////////////////////////////////////////////////////////////////////////

float  resize(float input, float factor, float offset)
{
	return (input-0.5f+offset) / factor+0.5f-offset;
}

uniform float4 screen_res;

// Pixel
Texture2D 	s_vp2;

float4 main( v2p I)	: SV_Target
{
	float4	t_base 	= s_base.Sample	( smp_base, I.tc0);	// Mesh texture
	// Stretch the image in the lens so that the correct proportions are at any screen resolution
	I.tc0.x = resize(I.tc0.x, screen_res.x / screen_res.y, 0);
	
	float4	t_vp2 = float4(0,0,0,0);
	
	if (isSecondVPActive()) {
		t_vp2 = s_vp2.Sample ( smp_base, I.tc0);	// Image from the second viewport
		if (m_blender_mode.x == 1.f) { //contrast NVD
			t_vp2.rgb = calc_night_vision_effect(I.tc0, t_vp2, float3(0.46, 0.46, 0.2), 2.0, false).rgb;
		} else if (m_blender_mode.x == 2.f) { //green_1 NVD
			t_vp2.rgb = calc_night_vision_effect(I.tc0, t_vp2, float3(0.66, 2.0, 0.5), 4.0, true).rgb;
		} else if (m_blender_mode.x == 3.f) { //green_2 NVD
			t_vp2.rgb = calc_night_vision_effect(I.tc0, t_vp2, float3(0.66, 2.0, 0.5), 7.0, true).rgb;
		} else if (m_blender_mode.x == 4.f) { //blue_1 NVD
			t_vp2.rgb = calc_night_vision_effect(I.tc0, t_vp2, float3(0.66, 0.5, 1.5), 4.0, true).rgb;
		} else if (m_blender_mode.x == 5.f) { //blue_2 NVD
			t_vp2.rgb = calc_night_vision_effect(I.tc0, t_vp2, float3(0.66, 0.5, 1.5), 7.0, true).rgb;
		} else if (m_blender_mode.x == 6.f) { //thermal_1 imager, black & white
			t_vp2.rgb = infrared(t_vp2, true).rgb;
		} else if (m_blender_mode.x == 7.f) { //thermal_2 imager, color
			t_vp2.rgb = infrared(t_vp2, false).rgb;
		}
	}
	
	// Mix with mesh
	float3 final = lerp(t_vp2, t_base, t_base.a).rgb;
	
	// out
	return float4(final.r, final.g, final.b, m_hud_params.x);
}
