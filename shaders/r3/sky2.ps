#include "common.h"
#include "rainbow_draw.h"
struct         v2p
{
	float4 factor : COLOR0; // for SM3 - factor.rgb - tonemap-prescaled
	float3	tc0		: TEXCOORD0;
	float3 tc1 : TEXCOORD1;
};
struct        _out
{
	float4	low		: SV_Target0;
	float4	high	: SV_Target1;
};


TextureCube	s_sky0	:register(t0);
TextureCube	s_sky1	:register(t1);

//////////////////////////////////////////////////////////////////////////////////////////
// Pixel
_out main( v2p I )
{
	float3	s0		= s_sky0.Sample( smp_rtlinear, I.tc0 );
	float3	s1		= s_sky1.Sample( smp_rtlinear, I.tc1 );
	s0 = SRGBToLinear(s0); 
	s1 = SRGBToLinear(s1); 
	float3	sky		= lerp( s0, s1, I.factor.w );
	sky *= SRGBToLinear(I.factor.rgb); 
	sky = LinearTosRGB(sky);
	sky		*= 0.33f;

	// final tone-mapping
	_out o;

	o.low        	=		sky.xyzz		;
	o.high        	=		o.low/(20*fog_params.x)	;
	
	//tonemap_sky        	(o.low, o.high, sky, I.tc0.w );
	
	
	if (sky_water_control_params.x) {
		float diff_green_red = L_sun_color.g - L_sun_color.r;
		float diff_green_blue = L_sun_color.g - L_sun_color.b;
		float amount = (diff_green_red-RB_GREENREDDIFF)+(diff_green_blue-RB_GREENBLUEDIFF);
		if (I.tc0.z >= RB_VIEWANGLE.x && I.tc0.z <= RB_VIEWANGLE.y && I.tc0.y >= RB_VIEWANGLE.z && I.tc0.y <= RB_VIEWANGLE.w && amount > 0)
		{	
			float sun_intensity = saturate((L_sun_color.r+L_sun_color.g+L_sun_color.b)*RB_SUNFACTOR/3);
			bool white = false;
			o.low += draw_rainbow(I.tc0.xy, RB_POSITION, sun_intensity, true, white) * amount * RB_COF;
		}
	
		o.low.a = 1;
		o.high.a = 1;
	}

	return        	o;
}